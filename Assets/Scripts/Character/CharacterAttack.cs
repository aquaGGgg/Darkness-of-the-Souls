using UnityEngine;
using Attacks;


public class CharacterAttack : AbstractAttack
{
    [SerializeField] private CharakterSkils[] AllAttacks; //  Все прокачиваемые атаки
    
    [SerializeField] private int baseDamage; // бызавый чарактера
    [SerializeField] private GameObject[] Weapons; // набор оружия

    void Start()
    {
        Controller.UnlockScill += UnlockScill;
    }


    private int WeaponInHand = 1;
    // private int[] WeaponDamge - как пример урона оружия если будут разные типы оружия с разными анимациями(типо меч, копьё и тп)

    void Update()
    {
        if(Input.GetKeyDown(KeyCode.K)){ //атака закрепленная всегда 
            Attack(1, baseDamage);
            Invoke("ResetAttack", 0.3f);
        }


        if(Input.GetKeyDown(KeyCode.J)){ // сильная атака
            Attack(2, baseDamage * 3);
            Invoke("ResetAttack", 1f);
        }
        if (Input.GetKeyDown(KeyCode.I))// слабая атака
        { 
            Attack(1, baseDamage);
            Invoke("ResetAttack", 0.3f);
        }
        if (Input.GetKeyDown(KeyCode.O))// сильная атака
        { 
            Attack(2, baseDamage * 3);
            Invoke("ResetAttack", 1f);
        }
    }
    

    private void WeaponSwap() // функция для "смены" оружия в руках
    {
        Weapons[WeaponInHand].SetActive(false);
        WeaponInHand = (WeaponInHand + 1) % Weapons.Length;
        Weapons[WeaponInHand -1].SetActive(true);
    }


    public void UnlockScill(int BS) // функция открытия скилов
    {
        AllAttacks[BS].isUnlok = true;
    }
}
